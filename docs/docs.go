// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/search": {
            "get": {
                "description": "Returns companies within the specified bounding box",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Search companies within bounding box",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounding box as comma-separated values: minLon,minLat,maxLon,maxLat",
                        "name": "bbox",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.SearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/search/by-postcode": {
            "get": {
                "description": "Returns companies grouped by postcode within the specified bounding box",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "search"
                ],
                "summary": "Group companies by postcode within bounding box",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bounding box as comma-separated values: minLon,minLat,maxLon,maxLat",
                        "name": "bbox",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal.GroupedSearchResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal.GroupedSearchResponse": {
            "type": "object",
            "properties": {
                "attribution": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "results": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/models.CompanyDataWithLocation"
                        }
                    }
                }
            }
        },
        "internal.SearchResponse": {
            "type": "object",
            "properties": {
                "attribution": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CompanyDataWithLocation"
                    }
                }
            }
        },
        "models.CompanyDataWithLocation": {
            "type": "object",
            "properties": {
                "accounts_account_category": {
                    "type": "string"
                },
                "accounts_account_ref_day": {
                    "type": "integer"
                },
                "accounts_account_ref_month": {
                    "type": "integer"
                },
                "accounts_last_made_up_date": {
                    "type": "string"
                },
                "accounts_next_due_date": {
                    "type": "string"
                },
                "company_category": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "company_number": {
                    "type": "string"
                },
                "company_status": {
                    "type": "string"
                },
                "conf_stmt_last_made_up_date": {
                    "type": "string"
                },
                "conf_stmt_next_due_date": {
                    "type": "string"
                },
                "country_of_origin": {
                    "type": "string"
                },
                "dissolution_date": {
                    "type": "string"
                },
                "easting": {
                    "type": "integer"
                },
                "incorporation_date": {
                    "type": "string"
                },
                "limited_partnerships_num_gen_partners": {
                    "type": "integer"
                },
                "limited_partnerships_num_lim_partners": {
                    "type": "integer"
                },
                "mortgages_num_charges": {
                    "type": "integer"
                },
                "mortgages_num_outstanding": {
                    "type": "integer"
                },
                "mortgages_num_part_satisfied": {
                    "type": "integer"
                },
                "mortgages_num_satisfied": {
                    "type": "integer"
                },
                "northing": {
                    "type": "integer"
                },
                "reg_address_address_line_1": {
                    "type": "string"
                },
                "reg_address_address_line_2": {
                    "type": "string"
                },
                "reg_address_care_of": {
                    "type": "string"
                },
                "reg_address_country": {
                    "type": "string"
                },
                "reg_address_county": {
                    "type": "string"
                },
                "reg_address_po_box": {
                    "type": "string"
                },
                "reg_address_post_code": {
                    "type": "string"
                },
                "reg_address_post_town": {
                    "type": "string"
                },
                "returns_last_made_up_date": {
                    "type": "string"
                },
                "returns_next_due_date": {
                    "type": "string"
                },
                "sic_code_1": {
                    "type": "string"
                },
                "sic_code_2": {
                    "type": "string"
                },
                "sic_code_3": {
                    "type": "string"
                },
                "sic_code_4": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1/company-data",
	Schemes:          []string{},
	Title:            "Company Data API",
	Description:      "A fast REST API for querying UK company data by geographic bounding box, built with Go, SQLite, and Gin. It imports official datasets from Companies House and Ordnance Survey CodePoint Open, providing spatial search capabilities for company records.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
